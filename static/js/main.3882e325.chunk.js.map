{"version":3,"sources":["Components/representational/Book.js","Components/lists/BookList.js","assets/books.js","Components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Book","props","className","onClick","delete","bookName","written","children","type","onChange","inputName","value","BookList","console","log","this","books","map","book","index","deleteBookState","event","changeWithInputState","id","Component","MainComponent","state","target","setState","splice","toggleBooks","showBooks","bookList","nextProps","nextState","style","border","borderRadius","backgroundColor","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3882e325.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../stylesheets/Book.css';\r\nconst Book=(props)=>{\r\n  return(\r\n    <div className=\"Book\">\r\n      <h1 onClick={props.delete}> Book:{props.bookName}    Written:{props.written}</h1>\r\n      <h2>Info:{props.children}</h2>\r\n      <input type=\"text\" onChange={props.inputName} value={props.bookName}/>\r\n    </div>\r\n        );\r\n}\r\nexport default Book;","import React,{Component} from 'react';\r\nimport Book from '../representational/Book';\r\nclass BookList extends Component{\r\nconstructor(props){\r\n  super(props);\r\n  console.log(\"BookList Constructor!\");\r\n}\r\nUNSAFE_componentWillMount(){\r\n  console.log(\"BookList ComponentWill Mount!\");\r\n}\r\ncomponentDidMount(){\r\n  console.log(\"BookList ComponentDidMount!\");\r\n}\r\nrender(){\r\n  console.log(\"BookList Render!\");\r\n  return(\r\n    this.props.books.map((book,index)=>{\r\n      return(\r\n         <Book\r\n         bookName={book.bookName}\r\n         written={book.written}\r\n         //delete={this.deleteBookState.bind(this,index)}\r\n         delete={()=>this.props.deleteBookState(index)}\r\n         key={book.id}\r\n         inputName={(event)=>this.props.changeWithInputState(event,index)}\r\n         />\r\n      );\r\n    })\r\n  );\r\n}\r\n}\r\n  \r\n  \r\n  \r\n\r\n\r\nexport default BookList;","const books=[\r\n  {id:1,bookName:\"1984\",written:\"Gerorge\"},\r\n  {id:2,bookName:\"x\",written:\"xy\"},\r\n  {id:3,bookName:\"y\",written:\"yz\"},\r\n  {id:4,bookName:\"z\",written:\"zx\"},\r\n  {id:5,bookName:\"WWW\",written:\"www\"}\r\n]\r\nexport default books;","import React ,{Component} from 'react';\r\nimport BookList from './lists/BookList';\r\nimport bookList from '../assets/books';\r\nclass MainComponent extends Component{\r\n constructor(props){\r\n    super(props);\r\n    this.state={\r\n      books:bookList,\r\n      showBooks:true\r\n    }\r\n    console.log(\"MainComponent Component\")\r\n   }\r\n  \r\n \r\n \r\n  changeWithInputState=(event,index)=>{\r\n    const book={...this.state.books[index]\r\n    }\r\n    book.bookName=event.target.value;\r\n    const books=[...this.state.books];\r\n    books[index]=book;\r\n    this.setState({books:books});\r\n  }\r\n\r\n  deleteBookState=index=>{\r\n    //const books=this.state.books;\r\n    //const books=this.state.books.slice();\r\n    //const books=this.state.books.map(item=>item);\r\n    const books=[...this.state.books];\r\n    books.splice(index,1);\r\n    this.setState({\r\n      books:books\r\n    });\r\n      };\r\n      toggleBooks=()=>{\r\n      this.setState({ showBooks:!this.state.showBooks})\r\n      }\r\n      componentDidMount(){\r\n          console.log(\"MainComponent ComponentDidMount!\");\r\n         }\r\n\r\n      UNSAFE_componentWillMount(){\r\n        console.log(\"MainComponent ComponentWill Mount!\");\r\n      }\r\n     \r\n      shouldComponentUpdate(nextProps,nextState){\r\n        console.log(\"Update MainComponent shouldComponentUpdate\",nextProps,nextState);\r\n        return true;\r\n      }\r\n      UNSAFE_componentWillUpdate(nextProps,nextState){\r\n        console.log(\"Update componentWillUpdate componentWillUpdate\");\r\n        \r\n      }\r\n      componentDidUpdate(){\r\n        console.log(\"Update BookList componentDidUpdate\");\r\n      }\r\n\r\n  render(){\r\n    console.log(\"MainComponent Render!\");\r\n    const style={\r\n      border:\"1 px solid red\",\r\n      borderRadius:\"5px\",\r\n      backgroundColor:\"black\",\r\n      color:\"white\"\r\n    };\r\n    \r\n    let books=null;\r\n    if(this.state.showBooks){\r\n       books=<BookList books={this.state.books} \r\n       deleteBookState={this.deleteBookState}\r\n       changeWithInputState={this.changeWithInputState}/>\r\n    }\r\n    \r\n    console.log(books);\r\n    return(\r\n      <div className=\"App\">\r\n         <h1 style={style}>Book List</h1>\r\n         <button onClick={this.toggleBooks}>Toggle Books</button>\r\n         {books}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// Another Way Of Binding:\r\n// <button onClick={()=>this.changeBookState(\"Nineteen Eighty Four\")}>Change State</button>\r\nexport default MainComponent;","import React from 'react';\r\nimport './App.css';\r\n//import Book from './Components/representational/Book';\r\nimport MainComponent from './Components/MainComponent';\r\n\r\n\r\nconst App=()=>{\r\n  return <MainComponent/>\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}